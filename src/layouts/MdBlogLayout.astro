---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import "../styles/markdown.css";
import BaseLayout from "./BaseLayout.astro";
import { Image } from "astro:assets";
import { Icons } from "../components/Icons";
import EmailSignup from "../components/EmailSignup.astro";
import CardMin from "../components/CardMin.astro";
import CardGrid from "../components/CardGrid.astro";
import CardBlog from "../components/CardBlog.astro";

interface Props {
    post: CollectionEntry<"blog">;
}
const { post } = Astro.props;
;
const allPosts: CollectionEntry<"blog">[] = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime(),
);
const indexOfPost = allPosts.findIndex(
    (posts) => post.data.title === posts.data.title,
);
const sameTagPosts = allPosts.filter(
    (posts) => 
        posts.data.tags && 
        posts.data.tags[0] === post.data.tags[0] && 
        posts.data.title !== post.data.title
);
---

<BaseLayout title="" description="">
    <div class="gradient-background flex-center full-width">
        <Image
            src={post.data.coverImage as ImageMetadata}
            alt={post.data.title + " cover image icon"}
        />
    </div>
    <div class="sub-menu-container">
        <button onclick="
        history.back()
        " class="back-button">
            <svg
                class="arrow-back"
                width="28"
                height="28"
                viewBox="0 0 22 22"
                fill="currentColor"
                set:html={Icons["leftarrow"]}
            />
        </button>
    </div>
    
    <article class="markdown-container">
        <h1 class="text-align-center margin-bottom-m margin-top-s">{post.data.title}</h1>
        <slot />
        <hr />
    </article>
    <div class="post-container">
        <div class="post-post-info-container margin-top-s margin-bottom-l">
            <p><small>Published: {post.data.pubDate.toLocaleDateString("en-GB",)}</small></p>
            <p><small>Last Update: 1555</small></p>
        </div>
        <div class="next-prev-post-container margin-top-l">
            {allPosts[indexOfPost - 1] ? (<CardMin href={`/blog/${allPosts[indexOfPost - 1].id}/`}><p style="font-weight: var(--font-weight-bold);">Next post</p><p style="color: var(--color-accent-500);">{allPosts[indexOfPost - 1].data.title}</p></CardMin>) : null}
            {allPosts[indexOfPost + 1] ? (<CardMin href={`/blog/${allPosts[indexOfPost + 1].id}/`}><p style="font-weight: var(--font-weight-bold);">Previous post</p><p style="color: var(--color-accent-500);">{allPosts[indexOfPost + 1].data.title}</p></CardMin>) : null}
        </div>
        <div class="email-container margin-top-l">
            <h2 class="text-align-center margin-bottom-xs">Email Updates</h2>
            <p class="margin-bottom-s">Once a month I write about what I've been up to, what I built, and cool things I came across.</p>
            <EmailSignup class="set-max-width" />
        </div>
        {sameTagPosts.length > 0 && (
            <h2 class="text-align-center margin-top-l margin-bottom-m">Similar Posts</h2>
            <CardGrid>
                {
                    sameTagPosts.map((post) => (<CardBlog post={post}/>))
                }
            </CardGrid>
        )}
    </div>
</BaseLayout>

<style>
    .gradient-background {
        background-color: var(--color-accent-500);
        background-image: var(--color-gradient);
        min-height: 25svh;
        > * {
            height: 8rem;
            width: auto;
        }
    }
    .sub-menu-container {
        padding-top: var(--space-2xs);
        .back-button {
        border: none;
            background-color: var(--color-neutral-900);
            color: var(--color-neutral-300);
            border-radius: var(--border-radius-s);
            &:hover, &:focus {
                background-color: var(--color-neutral-700);
            }
        }
    }
    .post-container {
        margin-inline: auto;
        width: 100%;
        max-width: var(--main-content-max-width);
    }
    .post-post-info-container {
        font-size: var(--font-size-small);
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        justify-content: flex-start;
        gap: var(--space-xs) var(--space-m);
        padding-inline: var(--space-m);
    }
    .email-container {
        background-color: var(--color-neutral-800);
        padding: var(--space-s) var(--space-m);
        border-radius: var(--border-radius-m);
    }
    .next-prev-post-container {
        display: flex;
        flex-direction: row;
        gap: var(--space-s);
    }
    @media only screen and (max-width: 36rem) {
        h1 {
            font-size: 36px;
        }
    }
    
</style>
