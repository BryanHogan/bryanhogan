---
const pageTtitle = "Blog Page";

const newsletterReminder = true;

import Button from "../components/Button.astro";
import CardB from "../components/CardB.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { getReadingTime } from "../utils/reading-time.ts"

const allPosts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
const backgroundColors = ["var(--color-side-accent-a)", "var(--color-side-accent-b)", "var(--color-side-accent-c)" , "var(--color-side-accent-d)"];
---

<Layout
  title="Bryan's Blog"
  headerMode="Reduced"
  metaDescription="Bryan Hogan's Blog. All about learning, creating and finding balance."
>
  <div class="gradient-background text-shadow intro-section text-align-center">
    <h1>Bryan's Blog</h1>
    <p>About learning, exploring and creating.</p>
    <Button
      link="/follow"
      text="Get Updates"
      targetText=""
      buttonStyle="transparent-bright small inset-dark-shadow"
    />
  </div>
  <div class="sub-nav-section">
    <a href="/about">About</a>
    <a href="/blog-compact">Compact View</a>
    <a href="/tags">Tag Overview</a>
    <a href="/rss.xml"><img src="/icons/RSS-Icon.svg" height="18" width="18" alt="RSS Icon" title="See RSS Feed"></a>

  </div>
  <ul class="posts-container">
    {
      allPosts.map((post, index) => (
        <li class="post">
          <CardB
            title={post.data.title}
            description={post.data.description}
            ahref={`/blog/${post.slug}/`}
            coverURL={post.data.coverImage.url}
            transition:name={post.data.coverImage.url}
            coverALT={post.data.coverImage.alt}
            coverWidth={post.data.coverImage.width}
            coverHeight={post.data.coverImage.height}
            tag={post.data.tags[0]}
            length={getReadingTime(post.body)}
            pubDate={post.data.pubDate}
            lastUpdate={post.data.lastUpdate}
            postURL={`/blog/${post.slug}/`}
            backgroundColor={backgroundColors[index % backgroundColors.length]}
          />
        </li>  
      ))
    }
    
  </ul>
</Layout>

<style>
  .sub-nav-section {
    display: flex;
    justify-content: center;
    max-width: 550px;
    margin-inline: auto;
    & a {
      color: var(--color-main-dark-30);
      font-size: 0.8rem;
      padding-top: 10px;
      padding-inline: 3%;
      text-decoration: none;
      transition: all 300ms;
      filter: brightness(0) saturate(100%) invert(57%) sepia(6%) saturate(183%)
        hue-rotate(169deg) brightness(92%) contrast(92%);
      &:hover {
        transition: all 200ms;
        filter: brightness(0) saturate(100%) invert(86%) sepia(2%)
          saturate(892%) hue-rotate(187deg) brightness(114%) contrast(88%);
      }
      & img {
        height: 80%;
        width: auto;
      }
    }
  }
  .intro-section {
    min-height: 300px;
    height: 45vh;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    & h1 {
      margin: 30px;
      margin-top: 50px;
    }
    & p {
      margin-bottom: 20px;
    }
  }
  .posts-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;
    list-style: none;
    max-width: 2200px;
    margin-inline: auto;
    & li {
      max-width: 400px;
      width: 90%;
      margin: 10px;
      margin-block: 40px;
    }
  }
  @media only screen and (min-width: 699px) {
    .posts-container li {
      margin-inline: 30px;
    }
  }
</style>
