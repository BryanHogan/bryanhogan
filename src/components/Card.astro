---
import TextElementBorderTopOpen from "../layouts/TextElementBorderTopOpen.astro";
const moveTopAmount = 15 + "px";
{ /*
const headerText = "title";
const descriptionText =
  ["Studying about Code & Design to be able to make our Start-Uy use valuable skills instead of being stuck inuseless theory. From helping people who take medicine regularly tobuilding profitable SAAS products for restaurants that want to utiliseSocial Media with real-world interaction", "second text area is here"];
const listPoints = ["Official Website", "Another Thing"];
*/ }
interface Props {
  headerText: string,
  descriptionText: Array<string>,
  listPoints: Array<string>
}
const {headerText, descriptionText, listPoints} = Astro.props;
---

<hgroup class="card-container">
  <h3 class="text-align-center">{headerText}</h3>
  <div class="descriptive-text text-section text-align-justify">
    {descriptionText.map((text) => <p>{text}</p>)}
    <ul>
      {listPoints.map((text) => <li>{text}</li>)}
    </ul>
  </div>
</hgroup>

<style define:vars={{ moveTopAmount }}>
  .card-container {
    margin: 30px 10px;
    max-width: 350px;
    margin-inline: auto;
    border: 1px solid var(--color-main-accent);
    border-radius: 1em 1em 0em 1em;
    padding: 0px 20px 40px 20px;
    margin-top: var(--moveTopAmount);
    margin-inline: 10px;
    box-shadow: var(--box-shadow-bright-small);
    justify-self: center;
    & h3 {
      position: relative;
      bottom: var(--moveTopAmount);
      background-color: var(--color-main-dark);
      width: 80%;
      margin-inline: auto;
      padding-inline: 10px;
      
    }
    & .description-text {
      position: relative;
      bottom: var(--moveTopAmount);
    }
  }
  ul {
    padding-left: 1em;
  }
  @media only screen and (max-width: 699px) {
  }
  @media only screen and (min-width: 699px) {
    .card-container {
      height: 350px;
    }
    .section-one {
      height: 100%;
    }
  }
</style>
