---
import Icon from "./Icon.astro";
import { Icons } from "../components/Icons";

interface Props {
    buttonStyle?: string;
    href: string;
    text: string;
    targetBlank?: boolean;
    icon?: keyof typeof Icons;
}

const {
    buttonStyle = "neutral",
    href,
    text,
    targetBlank = false,
    icon,
} = Astro.props;
---

<a href={href} class={buttonStyle} target={targetBlank ? "_blank" : "_self"}>
    {
        icon && (
            <Icon
                name={icon}
                label="lightbulb icon"
                size="1.5rem"
                class="icon"
            />
        )
    }
    {text}
</a>

<style>
    a {
        transition: all var(--transition-normal);
        display: flex;
        justify-content: center;
        align-items: center;
        text-decoration: none;
        border-radius: var(--border-radius-m);
        max-width: fit-content;
        padding: var(--space-xs) var(--space-m);
        & :global(svg) {
            margin-right: var(--space-xs);
            background-image: var(--color-gradient);
            background-clip: text;
        }
    }

    /* =========== Using Icons =========== */
    .icon-left {
        padding-left: var(--space-xs);
    }

    /* =========== Color Styles =========== */
    .neutral {
        color: var(--color-neutral-100);
        background-color: var(--color-neutral-700);
        &:hover {
            background-color: var(--color-neutral-600);
        }
    }
    .neutral-strong {
        color: var(--color-neutral-900);
        background-color: var(--color-neutral-100);
        &:hover {
            background-color: var(--color-neutral-300);
        }
    }
    .line {
        border: 1px solid var(--border-color);
        background-color: var(--color-neutral-900);
        border-radius: 0;
        &:hover {
            color: var(--color-neutral-100);
            background-color: var(--color-neutral-700);
        }
    }
    .accent {
        color: var(--color-neutral-100);
        background-color: var(--color-accent-800);
        &:hover {
            background-color: var(--color-accent-500);
        }
    }
    .gradient {
        background-image: var(--color-gradient);
        &:hover {
            opacity: 0.8;
        }
    }
    .transparent {
        color: var(--color-neutral-50);
        background-color: transparent;
        border: 1px solid var(--color-neutral-200);
        text-shadow: var(--text-shadow-m);
        &:hover {
            background-color: var(--color-accent-500);
            background-color: color-mix(
                in srgb,
                var(--color-accent-500) 30%,
                transparent);
        }
    }

    /* =========== Size Styles =========== */

    .grow {
        max-width: none;
        width: 100%;
    }
    .set-size {
        max-width: none;
        padding: var(--space-s) var(--space-m);
        width: 7rem;
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-bold);
    }
</style>
